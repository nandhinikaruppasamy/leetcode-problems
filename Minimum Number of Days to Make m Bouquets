class Solution {
    public int minDays(int[] a, int m, int k) {
        long val = (long) m*k;
        if(a.length<val) return -1;
       //Arrays.sort(a);
        int max = Integer.MIN_VALUE;
        int min = Integer.MAX_VALUE;
        for(int i=0;i<a.length;i++){
            min = Math.min(min,a[i]);
            max = Math.max(max,a[i]);
        }
        int low = min;int high = max;
        while(low<=high){
            int mid = (low+high)/2;
            if(possible(a,mid,m,k)) high = mid-1;
            else low = mid+1;
        }
        return low;
    }
    public static boolean possible(int[] a,int mid , int m,int k){
        int count = 0;
        int boque= 0;
        for(int i=0;i<a.length;i++){
            if(a[i]<=mid) count++;
            else {boque+=(count/k);count = 0;}
        }
        boque += (count/k);
        return boque>=m;
    }
}
